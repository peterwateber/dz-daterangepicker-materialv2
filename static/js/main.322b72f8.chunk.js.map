{"version":3,"sources":["../../src/utils.tsx","../../src/header/Header.tsx","../../src/header/TableHeader.tsx","../../src/Content.tsx","../../src/calendar/Year.tsx","../../src/calendar/Month.tsx","../../src/calendar/Day.tsx","../../src/typings.tsx","../../src/Daterangepicker.tsx","index.js"],"names":["arrayTo2DArray2","list","idx","result","getMonthWeeks","year","startDate","moment","start","end","getMonthDateRange","month","weekStartNum","weekEndNum","subtractDays","weekStart","startCalendar","endCalendar","getCalendarDateRange","diff","range","i","getRange","DateCompare","isSame","date1","isInMonth","targetDate","minMaxDate","maybeEnd","this","hoveredDate","isBetweenMaybeEnd","isSameOrBeforeEnd","isSameOrAfterStart","isInRange","Header","props","className","size","onClick","goToPrevious","fontSize","changeView","endIcon","React","goToNext","TableHeader","key","index","colSpan","Content","Year","cellClassName","mainClass","tabIndex","week","onMouseUp","e","Month","open","Day","day","onMouseOver","getDayProps","Views","Daterangepicker","endDate","minDate","maxDate","date","datePicker","currentDate","activeView","startWeek","min","max","num","page","focused","newView","setRangeDate","state","startState","undefined","onDateMouseOver","disableFuture","isCurrentDate","isDisabled","isStart","isEnd","isHovered","getYears","currentYear","targetYear","years","selected","isCurrentYear","isYearBlocked","isFocused","getMonths","currentMonth","targetMonth","monthNum","monthName","isCurrentMonth","isMonthBlocked","setYear","newDate","setMonth","changeYearPage","nextPage","goToPreviousMonths","subtract","goToNextMonths","add","goToPreviousYear","goToNextYear","componentDidUpdate","prevState","dayView","weeks","weekDays","shortenWeekDays","weekdaysMin","monthFormat","calendarMonthFormat","calendarTextDisplay","btnText","onClickDay","yearView","rows","onClickYear","monthView","months","onClickMonth","render","view","Component","myStyle","wrap","datePeriod","DateRangePickerView","useState","setDate","style","toString","onChange","locale","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.322b72f8.chunk.js","sourcesContent":["import moment, { Moment } from \"moment\";\n\n/**\n * @param {number} year The start year\n * @param {number} month The end month\n */\nfunction getMonthDateRange(year:number, month:number) {\n  // month in moment is 0 based, so 9 is actually october, subtract 1 to compensate\n  // array is 'year', 'month', 'day', etc\n  const startDate = moment([year, month]);\n\n  // Clone the value before .endOf()\n  const endDate = moment(startDate).endOf(\"month\");\n\n  // make sure to call toDate() for plain JavaScript date type\n  return { start: startDate, end: endDate };\n}\n\n/**\n * @param {date|Moment} start The start date\n * @param {date|Moment} end The end date\n * @param {\"monday\"|\"saturday\"|\"sunday\"} weekStart First Day of the Week\n */\ntype weekStart = \"monday\"|\"saturday\"|\"sunday\"\n\nfunction getCalendarDateRange(start: Moment, end: Moment, weekStart: weekStart) {\n  const weekStartNum = start.day() || 7;\n  const weekEndNum = end.day() || 7;\n\n  let subtractDays = weekStartNum;\n\n  if (weekStart === \"monday\") {\n    subtractDays = weekStartNum - 1;\n  } else if (weekStart === \"saturday\") {\n    subtractDays = weekStartNum + 1;\n  }\n\n  const startCalendar = start.subtract(subtractDays, \"d\");\n  const endCalendar = end.add(7 - weekEndNum, \"d\");\n\n  return {\n    startCalendar: startCalendar,\n    endCalendar: endCalendar\n  };\n}\n\n/**\n * @param {date|Moment} start The start date\n * @param {date|Moment} end The end date\n * @param { \"year\" | \"years\" | \"y\" | \"month\" | \"months\" | \"M\" |/\n * \"week\" | \"weeks\" | \"w\" | \"day\" | \"days\" } type The range type. eg: 'days', 'hours' etc\n */\ntype timeRange = \"year\" | \"years\" | \"y\" | \"month\" | \"months\" | \"M\" | \"week\" | \"weeks\" | \"w\" | \"day\" | \"days\"\n\nfunction getRange(start: Moment, end: Moment, type: timeRange) {\n  const diff = end.diff(start, type, true);\n\n  const range = [];\n  for (let i = 0; i < diff; i++) {\n    range.push(moment(start).add(i, type));\n  }\n  return range;\n}\n\n/**\n * Array split into groups of specific length\n * @param {[moment]} list The list of date\n * @param {number} howMany The end date\n */\nfunction arrayTo2DArray2(list: Object[], howMany:number) {\n  let idx = 0;\n  const result = [];\n\n  while (idx < list.length) {\n    if (idx % howMany === 0) result.push([]);\n    // @ts-ignore\n    result[result.length - 1].push(list[idx++]);\n  }\n\n  return result;\n}\n\n/**\n * @param {number} year The year\n * @param {number} month The month\n */\ntype weekStartCopy = weekStart\n\nfunction getMonthWeeks(year:number, month:number, weekStart: weekStartCopy) {\n  const { start, end } = getMonthDateRange(year, month);\n\n  const { startCalendar, endCalendar } = getCalendarDateRange(\n    start,\n    end,\n    weekStart\n  );\n\n  return getRange(startCalendar, endCalendar, \"day\");\n}\n\nfunction weekdaysMin(weekStart: weekStart, shortenWeekDays: boolean = false) {\n  const weekDays = !shortenWeekDays ? moment.weekdays(false) : moment.weekdaysShort(false);\n\n  if (weekStart === \"monday\") {\n    const day = weekDays.shift()\n    if(day){\n      weekDays.push(day);\n    }\n  } else if (weekStart === \"saturday\") {\n    const day = weekDays.pop()\n    if(day){\n      weekDays.unshift();\n    }\n  }\n\n  return weekDays;\n}\n\nclass DateCompare {\n  static isSame(\n    date1: Moment|null|undefined,\n    date2: Moment|null|undefined\n  ): boolean {\n    if(date1 && date2) return date1.isSame(date2, \"day\");\n    return false\n  }\n\n  static isInMonth(targetDate: Moment, month: Number):boolean {\n    return targetDate.month() === month;\n  }\n\n  static minMaxDate(targetDate: Moment, start?: Moment, end?: Moment) {\n    if (start && end) {\n      return targetDate.isBetween(start, end);\n    } else if (start) {\n      return targetDate.isAfter(start);\n    } else if (end) {\n      return targetDate.isBefore(end);\n    }\n    return true;\n  }\n\n  static maybeEnd(\n    targetDate: Moment,\n    start?: Moment,\n    end?: Moment,\n    hoveredDate?: Moment,\n  ):boolean {\n    if (!start || (start && end)) return false;\n\n    return this.isSame(targetDate, hoveredDate) && !start.isAfter(hoveredDate, \"day\")\n  }\n\n  static isBetweenMaybeEnd(\n    targetDate: Moment,\n    start?: Moment,\n    end?: Moment,\n    maybeEnd?: Moment\n  ):boolean | undefined {\n    const isSameOrBeforeEnd = targetDate.isSameOrBefore(maybeEnd, \"day\");\n    const isSameOrAfterStart = targetDate.isSameOrAfter(start, \"day\");\n\n    return start && !end && isSameOrAfterStart && isSameOrBeforeEnd;\n  }\n\n  static isInRange(\n    targetDate: Moment,\n    start?: Moment,\n    end?: Moment,\n    hoveredDate?: Moment,\n  ): boolean | undefined {\n    if (start && end) {\n      return targetDate.isBetween(start, end, \"day\")\n    }\n\n    return this.isBetweenMaybeEnd(targetDate, start, end, hoveredDate);\n  }\n}\n\n\nexport {\n  getMonthDateRange,\n  getCalendarDateRange,\n  getRange,\n  arrayTo2DArray2,\n  getMonthWeeks,\n  weekdaysMin,\n  DateCompare\n};\n","import React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\nimport Button from \"@material-ui/core/Button\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport ArrowDropUpIcon from \"@material-ui/icons/ArrowDropUp\";\n\n\ninterface HeaderProps {\n    goToPrevious:any\n    goToNext:any\n    changeView:any\n    btnText:string\n    open:boolean\n}\n\nfunction Header(props:HeaderProps) {\n  const btnIcon = () =>\n    props.open ? <ArrowDropUpIcon /> : <ArrowDropDownIcon />;\n\n  return (\n    <div className=\"dz-calendar-header\">\n      <div className=\"header__content\">\n        <IconButton\n          className=\"header__content__previous-button\"\n          size=\"small\"\n          onClick={props.goToPrevious}\n        >\n          <ArrowBackIosIcon fontSize=\"inherit\" />\n        </IconButton>\n        <Button onClick={props.changeView} endIcon={btnIcon()}>\n          <span className=\"header__content__calendar-text\">\n            {props.btnText}\n          </span>\n        </Button>\n        <IconButton\n          className=\"header__content__next-button\"\n          size=\"small\"\n          onClick={props.goToNext}\n        >\n          <ArrowForwardIosIcon fontSize=\"inherit\" />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n\n// Specifies the default values for props:\nHeader.defaultProps = {\n  open: false\n};\n\nexport default Header;\n","import React from \"react\";\n\ninterface TableHeaderProps {\n  weekDays?: string[]\n}\n\nfunction TableHeader(props:TableHeaderProps) {\n  return (\n    <thead className=\"cdz-calendar__table__header\">\n      <tr>\n        {props.weekDays && props.weekDays.map((day:string, index:number) => (\n          <th key={index}>{day}</th>\n        ))}\n      </tr>\n      <tr>\n        <th\n          aria-hidden=\"true\"\n          className=\"dz-calendar__table__header__divider\"\n          colSpan={7}\n        />\n      </tr>\n    </thead>\n  );\n}\n\nexport default TableHeader;\n","import React from \"react\";\n\ninterface ContentProps {\n    children: React.ReactNode;\n}\n\nfunction Content(props:ContentProps) {\n  return (\n    <div className=\"dz-calendar-content\">\n      <table className=\"dz-calendar__table\">{props.children}</table>\n    </div>\n  );\n}\n\nexport default Content;\n","import React from \"react\";\nimport {Year} from \"../typings\"\n\ninterface YearProps {\n    onClickYear: any\n    rows: Year[][]\n}\n\nfunction Year(props:YearProps) {\n  const cellClassName = (year: Year) => {\n    const mainClass = \"dz-calendar__table__body__cell\";\n    const className = [mainClass];\n\n    if (year.isCurrentYear) {\n      className.push(`${mainClass}--today`);\n    }\n\n    if (year.selected) {\n      className.push(`${mainClass}--active`);\n    }\n\n    return className.join(\" \");\n  };\n\n  const tabIndex = (year: Year) => {\n    return year.isCurrentYear ? 1 : 0;\n  };\n\n  return (\n    <tbody className=\"dz-calendar__table__body\">\n      {props.rows.map((week, index) => (\n        <tr key={index} className=\"dz-calendar-table-body-week\">\n          {week.map((year, index) => (\n            <td\n              className={cellClassName(year)}\n              onMouseUp={e => props.onClickYear(e, year.year)}\n              key={index}\n              tabIndex={tabIndex(year)}\n            >\n              <div className=\"dz-calendar__table__body__cell__content year-content\">\n                {year.year}\n              </div>\n            </td>\n          ))}\n        </tr>\n      ))}\n    </tbody>\n  );\n}\n\nexport default Year;\n","import React from \"react\";\nimport {Month} from \"../typings\"\n\ninterface MonthProps {\n    onClickMonth: any\n    rows: Month[][]\n}\n\nfunction Month(props: MonthProps) {\n  const cellClassName = (month: Month) => {\n    const mainClass = \"dz-calendar__table__body__cell\";\n    const className = [mainClass];\n\n    if (month.isCurrentMonth) {\n      className.push(`${mainClass}--today`);\n    }\n\n    if (month.selected) {\n      className.push(`${mainClass}--active`);\n    }\n\n    return className.join(\" \");\n  };\n\n  const tabIndex = (month: Month) => {\n    return month.isCurrentMonth ? 1 : 0;\n  };\n\n  return (\n    <tbody className=\"dz-calendar__table__body\">\n      {props.rows.map((month, index) => (\n        <tr key={index} className=\"dz-calendar-table-body-month\">\n          {month.map((month, index) => (\n            <td\n              className={cellClassName(month)}\n              onMouseUp={e => props.onClickMonth(e, month.monthNum)}\n              key={index}\n              tabIndex={tabIndex(month)}\n            >\n              <div className=\"dz-calendar__table__body__cell__content month-content\">\n                {month.monthName}\n              </div>\n            </td>\n          ))}\n        </tr>\n      ))}\n    </tbody>\n  );\n}\n\nexport default Month;\n","import React from \"react\";\nimport {Moment} from \"moment\";\nimport {Day} from \"../typings\"\n\ninterface DayProps {\n    onDateMouseOver: any,\n    onClickDay: any,\n    weeks: Day[][]\n    start?: Moment\n    end?: Moment\n    disableFuture?: boolean\n}\n\nconst Day = (props: DayProps) =>{\n  const cellClassName = (day: Day) => {\n    const mainClass = \"dz-calendar__table__body__cell\";\n    const className = [mainClass];\n\n    if (day.isInRange && !(day.isStart || day.isEnd)) {\n      className.push(`${mainClass}--semi-selected`);\n    }\n\n    if (day.isStart) {\n      className.push(`${mainClass}--begin-range`);\n    }\n    if (day.isEnd || day.maybeEnd) {\n      className.push(`${mainClass}--end-range`);\n    }\n\n    if (!day.isInMonth || day.isDisabled) {\n      className.push(`${mainClass}--disabled`);\n      return className.join(\" \");\n    }\n\n    if (props.disableFuture && day.date.isAfter(new Date())) {\n      className.push(`${mainClass}--disabled`);\n      return className.join(\" \");\n    }\n\n    if (day.isHovered) {\n      className.push(`${mainClass}--hover`);\n    }\n    if (day.isCurrentDate) {\n      className.push(`${mainClass}--today`);\n    }\n    if (day.maybeEnd) {\n      className.push(`${mainClass}--maybe-end`);\n    }\n\n    return className.join(\" \");\n  };\n\n  const tabIndex = (day: Day) => {\n    return day.isCurrentDate ? 1 : 0;\n  };\n\n  const getDayProps = (day: Day) => {\n    if (props.disableFuture && day.date.isAfter(new Date())) return {};\n    if (day.isInMonth && !day.isDisabled) {\n      return  {\n        onMouseUp: () => props.onClickDay(day.date),\n        onMouseOver: () => props.onDateMouseOver(day.date),\n      };\n    }\n    return {};\n  };\n\n  return (\n    <tbody className=\"dz-calendar__table__body\">\n      {props.weeks.map((week, index:number) => (\n        <tr key={index} className=\"dz-calendar-table-body-week\">\n          {week.map((day: Day, index:number) => (\n            <td\n              key={index}\n              className={cellClassName(day)}\n              tabIndex={tabIndex(day)}\n              {...getDayProps(day)}\n            >\n              <div className=\"dz-calendar__table__body__cell__content\">\n                {day.date.date()}\n              </div>\n            </td>\n          ))}\n        </tr>\n      ))}\n    </tbody>\n  );\n}\n\nexport default Day;\n","import moment, {Moment} from \"moment\";\nimport React from \"react\";\n\ntype StartWeekType = \"monday\" | \"saturday\" | \"sunday\"\n\nenum Views {\n  'month',\n  'day',\n  'year',\n}\n\ninterface DaterangepickerProps {\n    startDate?: Moment | Date\n    endDate?: Moment | Date\n    onChange: any\n    startWeek?: StartWeekType\n    datePicker: boolean\n    locale: string\n    minDate?: Moment | Date\n    maxDate?: Moment | Date\n    wrapperProps: React.HTMLAttributes<HTMLDivElement>\n    disableFuture?: boolean\n    shortenWeekDays?: boolean\n    calendarMonthFormat?: \"M\" | \"Mo\" | \"MM\" | \"MMM\" | \"MMMM\"\n}\n\ninterface DaterangepickerState {\n    datePicker: boolean,\n    currentDate: moment.Moment,\n    date: Moment,\n    activeView: Views,\n    startWeek:  StartWeekType,\n    year: {\n      min: number,\n      max: number,\n      num: number,\n      page: number,\n      focused: number\n    },\n    month: {\n      min: number,\n      max: number,\n      focused: number\n    },\n    day: {\n      start?: Moment,\n      end?: Moment,\n      min?: Moment,\n      max?: Moment,\n      hoveredDate?: Moment,\n    }\n}\n\ninterface Day {\n    date: Moment,\n    isCurrentDate: Boolean,\n    isInRange: Boolean,\n    isDisabled: Boolean,\n    isInMonth: Boolean,\n    isStart: Boolean,\n    isEnd: Boolean,\n    maybeEnd: Boolean,\n    isHovered: Boolean\n}\n\ninterface Year {\n  year: String\n  selected: boolean\n  isCurrentYear: boolean\n  isYearBlocked: boolean\n  isFocused: boolean\n}\n\ninterface Month  {\n    monthNum: number,\n    monthName: string,\n    selected: boolean,\n    isCurrentMonth: boolean,\n    isMonthBlocked: boolean,\n    isFocused: boolean\n}\n\nexport {Day ,Year, Month, DaterangepickerProps, DaterangepickerState, Views, StartWeekType}\n","import React from \"react\";\nimport moment, { Moment } from \"moment\";\nimport { arrayTo2DArray2, getMonthWeeks, weekdaysMin, DateCompare } from \"./utils\";\nimport Header from \"./header/Header\";\nimport TableHeader from \"./header/TableHeader\";\nimport Content from \"./Content\";\nimport Year from \"./calendar/Year\";\nimport Month from \"./calendar/Month\";\nimport Day from \"./calendar/Day\";\nimport { DaterangepickerProps, DaterangepickerState, Views } from \"./typings\";\n\nimport \"./style/main.css\";\n\nclass Daterangepicker extends React.Component<DaterangepickerProps, DaterangepickerState> {\n  private readonly currentDate: moment.Moment;\n\n  constructor(props: DaterangepickerProps) {\n    super(props);\n    moment.locale(props.locale || \"en\");\n\n    const { startDate, endDate, minDate, maxDate } = props;\n\n    this.currentDate = moment().startOf(\"day\");\n    const date = moment(endDate || this.currentDate);\n\n    this.state = {\n      datePicker: props.datePicker || false,\n      currentDate: this.currentDate,\n      date: date,\n      activeView: Views.day,\n      startWeek: props.startWeek || \"monday\",\n      year: {\n        min: 1990,\n        max: 2023,\n        num: 24,\n        page: 0,\n        focused: date.year()\n      },\n      month: {\n        min: 0,\n        max: 11,\n        focused: date.month()\n      },\n      day: {\n        start: startDate && moment(startDate) ,\n        end: endDate && moment(endDate),\n        min: minDate && moment(minDate),\n        max: maxDate && moment(maxDate),\n        hoveredDate: this.currentDate,\n      }\n    }\n\n    this.goToPreviousMonths = this.goToPreviousMonths.bind(this);\n    this.goToNextMonths = this.goToNextMonths.bind(this);\n    this.goToPreviousYear = this.goToPreviousYear.bind(this);\n    this.goToNextYear = this.goToNextYear.bind(this);\n    this.setRangeDate = this.setRangeDate.bind(this);\n    this.onDateMouseOver = this.onDateMouseOver.bind(this);\n    this.changeView = this.changeView.bind(this);\n    this.setYear = this.setYear.bind(this);\n    this.setMonth = this.setMonth.bind(this);\n  }\n\n  changeView(newView: Views) {\n    this.setState({\n      activeView: newView\n    });\n  }\n\n  setRangeDate(date: Moment) {\n    const { day, datePicker } = this.state;\n    const startState = {\n      day: {\n        ...day,\n        start: date\n      }\n    };\n\n    if (datePicker) {\n      this.setState({\n        day: {\n          start: date,\n          end: date\n        }\n      });\n    } else if (day.start === undefined && day.end === undefined) {\n      this.setState(startState);\n    } else if (day.start && day.end === undefined && date.isBefore(day.start)) {\n      this.setState(startState);\n    } else if (day.start && day.end === undefined) {\n      this.setState({\n        day: {\n          ...day,\n          end: date\n        },\n      });\n    } else if (day.start && day.end) {\n      this.setState({\n        ...startState,\n        day: {\n          ...startState.day,\n          end: undefined\n        }\n      });\n    }\n  }\n\n  onDateMouseOver(date: Moment) {\n    const { day } = this.state;\n\n    const isSame = DateCompare.isSame(date, day.hoveredDate);\n    if (isSame) return;\n\n    if (this.props.disableFuture && date.isAfter(new Date())) return;\n\n    this.setState({\n      ...this.state,\n      day: {\n        ...day,\n        hoveredDate: date,\n      }\n    });\n  }\n\n  getMonthWeeks(year: number, month: number) {\n    const {\n      day,\n      currentDate,\n    } = this.state;\n\n    let weeks = getMonthWeeks(year, month, this.state.startWeek);\n\n    let weeksDays = weeks.map((date:Moment) => ({\n      date: date,\n      isCurrentDate: DateCompare.isSame(date, currentDate),\n      isInRange: DateCompare.isInRange(\n        date,\n        day.start,\n        day.end,\n        day.hoveredDate\n      ),\n      isDisabled: !DateCompare.minMaxDate(date, day.min, day.max),\n      isInMonth: DateCompare.isInMonth(date, month),\n      isStart: DateCompare.isSame(date, day.start),\n      isEnd: DateCompare.isSame(date, day.end),\n      maybeEnd: DateCompare.maybeEnd(\n        date,\n        day.start,\n        day.end,\n        day.hoveredDate\n      ),\n      isHovered: DateCompare.isSame(date, day.hoveredDate),\n    }));\n\n    return arrayTo2DArray2(weeksDays, 7);\n  }\n\n  getYears() {\n    const { currentDate, date } = this.state;\n    const { num, focused, page } = this.state.year;\n    const currentYear = currentDate.year();\n    const targetYear = date.year();\n\n    let start = currentYear - 4;\n\n    if (page > 0) {\n      start = start + page * num;\n    } else {\n      start = start - -1 * page * num;\n    }\n\n    const end = start + num;\n\n    let years = [];\n    for (start; start < end; start++) {\n      years.push(start);\n    }\n\n    years = years.map((year) => ({\n      year: year,\n      selected: year === targetYear,\n      isCurrentYear: year === currentYear,\n      isYearBlocked: false,\n      isFocused: year === focused\n    }));\n    return arrayTo2DArray2(years, 4);\n  }\n\n  getMonths() {\n    const { currentDate, date } = this.state;\n    const currentMonth = currentDate.month();\n    const targetMonth = date.month();\n    const { focused } = this.state.month;\n\n    const months = moment.monthsShort().map((month:string, monthNum:number) => ({\n      monthNum: monthNum,\n      monthName: month,\n      selected: monthNum === targetMonth,\n      isCurrentMonth: monthNum === currentMonth,\n      isMonthBlocked: false,\n      isFocused: monthNum === focused\n    }));\n\n    return arrayTo2DArray2(months, 4);\n  }\n\n  setYear(_e:any, year:number) {\n    const newDate = this.state.date.year(year);\n    this.setState(\n      {\n        date: newDate\n      },\n      () => this.changeView(Views.month)\n    );\n  }\n\n  setMonth(_e:any, month:number) {\n    const newDate = this.state.date.month(month);\n\n    this.setState(\n      {\n        date: newDate\n      },\n      () => this.changeView(Views.day)\n    );\n  }\n\n  changeYearPage(nextPage:boolean=true) {\n    const { year } = this.state;\n\n    this.setState({\n      year: {\n        ...year,\n        page: nextPage ? year.page + 1 : year.page - 1\n      }\n    });\n  }\n\n  goToPreviousMonths() {\n    this.setState({\n      date: this.state.date.subtract(1, \"M\")\n    });\n  }\n\n  goToNextMonths() {\n    this.setState({\n      date: this.state.date.add(1, \"M\")\n    });\n  }\n\n  goToPreviousYear() {\n    this.setState({\n      date: this.state.date.subtract(1, \"y\")\n    });\n  }\n\n  goToNextYear() {\n    this.setState({\n      date: this.state.date.add(1, \"y\")\n    });\n  }\n\n  componentDidUpdate(_prevProps:any, prevState:any) {\n    const { day } = this.state;\n\n    if (day.start && day.end && (day.start !== prevState.day.start || day.end !== prevState.day.end)) {\n      this.props.onChange(day.start, day.end);\n    }\n  }\n\n  dayView() {\n    const { date, day } = this.state;\n    const weeks = this.getMonthWeeks(date.year(), date.month());\n    const weekDays = weekdaysMin(this.state.startWeek, this.props.shortenWeekDays);\n    const monthFormat = this.props.calendarMonthFormat ? this.props.calendarMonthFormat : \"MMMM\";\n    const calendarTextDisplay = `${date.format(monthFormat)} ${date.year()}`;\n\n    const changeView = () => this.changeView(Views.year);\n\n    return (\n      <React.Fragment>\n        <Header\n          goToPrevious={this.goToPreviousMonths}\n          goToNext={this.goToNextMonths}\n          changeView={changeView}\n          btnText={calendarTextDisplay}\n          open={false}\n        />\n        <Content>\n          <TableHeader weekDays={weekDays} />\n          <Day\n            onDateMouseOver={this.onDateMouseOver}\n            onClickDay={this.setRangeDate}\n            weeks={weeks}\n            start={day.start}\n            end={day.end}\n            disableFuture={this.props.disableFuture}\n          />\n        </Content>\n      </React.Fragment>\n    );\n  }\n\n  yearView() {\n    const { date } = this.state;\n    const btnText = `${date.format(\"YYYY\")}`;\n    const rows = this.getYears();\n\n    const changeView = () => this.changeView(Views.day);\n\n    const nextPage = () => this.changeYearPage(true);\n    const previousPage = () => this.changeYearPage(false);\n\n    return (\n      <React.Fragment>\n        <Header\n          goToPrevious={previousPage}\n          goToNext={nextPage}\n          changeView={changeView}\n          btnText={btnText}\n          open\n        />\n        <Content>\n          <TableHeader/>\n          <Year onClickYear={this.setYear} rows={rows} />\n        </Content>\n      </React.Fragment>\n    );\n  }\n\n  monthView() {\n    const { date } = this.state;\n    const months = this.getMonths();\n\n    return (\n      <React.Fragment>\n        <Header\n          goToPrevious={this.goToPreviousYear}\n          goToNext={this.goToNextYear}\n          changeView={this.changeView}\n          btnText={`${date.format(\"YYYY\")}`}\n          open\n        />\n        <Content>\n          <TableHeader />\n          <Month onClickMonth={this.setMonth} rows={months} />\n        </Content>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    const {activeView} = this.state;\n    let view = this.dayView();\n\n    if (activeView === Views.year) {\n      view = this.yearView();\n    } else if (activeView === Views.month) {\n      view = this.monthView();\n    }\n\n    return (\n        <div className=\"dz-calendar\" {...this.props.wrapperProps}>\n          {view}\n        </div>\n    )\n\n  }\n}\n\nexport default Daterangepicker;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport DateRangePicker from \"dz-daterangepicker-materialv2\";\n\nimport \"dz-daterangepicker-materialv2/dist/index.css\";\n\nconst myStyle = {\n    wrap:{\n      \"flexDirection\": \"column\",\n      \"alignItems\": \"center\",\n      \"display\": \"flex\",\n      \"justifyContent\": \"center\"\n    },\n    datePeriod:{\n      \"display\": \"inlineBlock\"\n    },\n    date:{\n      \"color\": \"red\"\n    }\n};\n\nfunction DateRangePickerView(){\n    const [date, setDate] = React.useState({})\n\n    const onChange = (start, end) => {\n        setDate({\n          startDate: start,\n          endDate: end,\n        })\n    }\n\n    return (\n       <div style={myStyle.wrap}>\n         <h4>Start date:&nbsp;\n           <span style={myStyle.date}>{date.startDate? date.startDate.toString(): null}</span>\n         </h4>\n         <h4 style={myStyle.datePeriod}>End date:&nbsp;\n           <span style={myStyle.date}>{date.endDate? date.endDate.toString() : null}</span>\n         </h4>\n\n         <DateRangePicker\n           disableFuture\n           shortenWeekDays\n           startDate={date.startDate}\n           endDate={date.endDate}\n           datePicker={false}\n           onChange={onChange}\n           locale={'de'}\n           startWeek={'monday'} //monday|saturday|sunday\n         />\n       </div>\n    )\n}\n\n\nReactDOM.render(<DateRangePickerView/>, document.getElementById('root'))\n"],"sourceRoot":""}